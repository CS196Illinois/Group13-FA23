/**
 * Header Block
 * @class
 * @author Andrew Wilson 
 */

'use strict';

Object.defineProperty(exports, '__esModule', {
	value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var Header = (function (_Component) {
	_inherits(Header, _Component);

	_createClass(Header, null, [{
		key: 'propRef',
		value: {
			value: 'HTML',
			size: 'Number'
		},

		/** @constructor */
		enumerable: true
	}]);

	function Header(props) {
		_classCallCheck(this, Header);

		_get(Object.getPrototypeOf(Header.prototype), 'constructor', this).call(this, props);
	}

	/**
  * Render for Header
  * @returns {Function}
  */

	_createClass(Header, [{
		key: 'render',
		value: function render() {
			switch (this.props.size) {
				case 1:
					return _react2['default'].createElement(
						'h1',
						{ className: 'edittable', style: this.props.styles, contentEditable: this.props.editable },
						this.props.value
					);
				case 2:
					return _react2['default'].createElement(
						'h2',
						{ className: 'edittable', style: this.props.styles, contentEditable: this.props.editable },
						this.props.value
					);
				case 3:
					return _react2['default'].createElement(
						'h3',
						{ className: 'edittable', style: this.props.styles, contentEditable: this.props.editable },
						this.props.value
					);
				case 4:
					return _react2['default'].createElement(
						'h4',
						{ className: 'edittable', style: this.props.styles, contentEditable: this.props.editable },
						this.props.value
					);
				case 5:
					return _react2['default'].createElement(
						'h5',
						{ className: 'edittable', style: this.props.styles, contentEditable: this.props.editable },
						this.props.value
					);
				default:
					return _react2['default'].createElement(
						'h1',
						{ className: 'edittable', style: this.props.styles, contentEditable: this.props.editable },
						this.props.value
					);
			}
		}
	}]);

	return Header;
})(_react.Component);

exports['default'] = Header;
module.exports = exports['default'];